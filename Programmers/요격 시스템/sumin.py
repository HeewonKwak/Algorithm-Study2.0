"""
<풀이 시간>
25분

<문제 조건>
- 1 <= len(targets) <= 500,000
- targets의 각 행은 [s, e] 형태
    - x 좌표 범위를 나타내며, 개구간 (s, e)에서 요격해야 한다.
    - 0 <= s < e <= 100,000,000
- 개구간 (s, e)로 표현되는 폭격 미사일은 s와 e에서 발사하는 요격 미사일로는 요격할 수 없다.

-> targets의 길이가 최대 500,000이기 때문에 O(NlogN)으로 해결해야 한다.

<문제 풀이>
'그리디 알고리즘'으로 백준의 강의실 배정 문제와 유사하다.
1. 폭격 미사일을 끝지점을 기준으로 오름차순 정렬한다.
2. 가장 마지막에 설치한 요격 미사일로 폭격 미사일을 요격할 수 있는지 확인한다.
-> 요격 미사일 지점보다 폭격 미사일의 시작점이 더 크다면, 가장 최근에 설치한 요격 미사일로 해당 폭격 미사일을 요격할 수 없기 때문에 요격 미사일의 수를 하나 추가하고 미사일의 위치를 갱신한다.
"""


def solution(targets):
    """
    :param targets: 각 폭격 미사일의 X 좌표 범위 목록
    :return: 모든 폭격 미사일을 요격하기 위해 필요한 요격 미사일 수의 최솟값
    """
    answer = 0
    targets.sort(key=lambda x: x[1])
    missile = -1
    for s, e in targets:
        # 가장 마지막으로 발사한 요격 미사일로 현재 폭격 미사일을 요격할 수 없다면
        if missile < s:
            answer += 1
            missile = e - 0.1 # s와 e에서는 미사일 발사할 수 없음

    return answer


# Test Case
print(solution(targets=[[4,5],[4,8],[10,14],[11,13],[5,12],[3,7],[1,4]])) # 3
